name: recommendation-service-ci

on:
  pull_request:
    branches: [main]
  push:
    paths:
      - '.github/workflows/recommendation.yaml'
      - 'src/recommendation/**'

jobs:
  # ✅ 1. Unit Testing
  unit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          cd src/recommendation
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        working-directory: ./src/recommendation
        run: |
          python3 -m unittest discover -s . -p "test_recommendation_service.py"
        continue-on-error: true  # Allows the workflow to continue even if tests fail for debugging

  # ✅ 2. Code Quality
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          cd src/recommendation
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run flake8 (code quality check)
        working-directory: ./src/recommendation
        run: |
          flake8 . --max-line-length=100 --exclude=demo_pb2.py,demo_pb2_grpc.py,venv
        continue-on-error: true

  # ✅ 3. Build + Trivy Scan + Push to GAR
  docker-build-push:
    runs-on: ubuntu-latest
    needs: [unit-testing, code-quality]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker to use GAR
        run: gcloud auth configure-docker asia-south1-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t asia-south1-docker.pkg.dev/silken-oxygen-454215-v6/microservices-demo/recommendationservice:${{ github.sha }} -f src/recommendation/Dockerfile src/recommendation

      - name: Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: asia-south1-docker.pkg.dev/silken-oxygen-454215-v6/microservices-demo/recommendationservice:${{ github.sha }}
          format: table
          exit-code: '1'
          ignore-unfixed: true

      - name: Push Docker Image to GAR
        run: |
          docker push asia-south1-docker.pkg.dev/silken-oxygen-454215-v6/microservices-demo/recommendationservice:${{ github.sha }}

  # ✅ 4. Update Kubernetes Manifest with New Image
  k8s-update:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Update Kubernetes Deployment YAML
        run: |
          sed -i "s|image: .*|image: asia-south1-docker.pkg.dev/silken-oxygen-454215-v6/microservices-demo/recommendationservice:${{ github.sha }}|" kubernetes/recommendation/deploy.yaml
          cat kubernetes/recommendation/deploy.yaml

  # ✅ 5. Commit & Push Updated YAML
  commit-and-push:
    runs-on: ubuntu-latest
    needs: k8s-update
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Commit updated manifest
        run: |
          git config --global user.email "mspr9773@gmail.com"
          git config --global user.name "mokadi surya prasad"
          git add kubernetes/recommendation/deploy.yaml
          git commit -m "[CI]: Update recommendation deployment image tag"
          git push origin main  # Updated push target to 'main' branch
